getwd()
4-1
4/2
(4/2)*2
(4*12)/2
mean(4, 6, 8, 5, 6, 7, 7, 7)
mean(4, 6, 8, 5, 6, 7, 7, 7)
medean(4, 6, 8, 5, 6, 7, 7, 7)
median(4, 6, 8, 5, 6, 7, 7, 7)
mean(4, 6, 8, 5, 6, 7, 7, 7)
median(4, 6, 8, 5, 6, 7, 7, 7)
knitr::opts_chunk$set(echo = TRUE)
4*2
getwd()
getwd()
4*12
getwd()
4*12
(4*12)/2
getwd()
4*12
(4*12)/2
mean(4,6,8,5,6,7,7,7)
**4. Calculate the following expressions. Be sure to include each one in a separate code chunk.**
+ 5 - 3 * 2
+ 8 / 2 ** 2
**4. Calculate the following expressions. Be sure to include each one in a separate code chunk.**
+ 5 - 3 * 2
+ 8 / 2 ** 2
**5. Did any of the results in #4 surprise you? Write two programs that calculate each expression such that the result for the first example is 4 and the second example is 16.**
+ (5 - 3) * 2
+ 8 / (2 ** 2)
**5. Did any of the results in #4 surprise you? Write two programs that calculate each expression such that the result for the first example is 4 and the second example is 16.**
+ (5 - 3) * 2
+ (8 / 2) ** 2
```{r}
```{r}
```{r}
```{r}
?mean
pi <- 3.14159265359
pi <- 3.14159265359
**7. Let's say we want to multiply `pi` by 2. Using the same arithmetic principles that we just learned, write a code chunk that performs this operation using the object we created.**
pi*2
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
mean(x)
**8. In order to get help with any command in R, just type a `?` in front the command of interest. Practice this by running the following code chunk.**
```{r}
?mean
```
?mean
median(x)
**8. In order to get help with any command in R, just type a `?` in front the command of interest. Practice this by running the following code chunk.**
```{r}
?mean
```
**4. Calculate the following expressions. Be sure to include each one in a separate code chunk.**
```{r}
+ 5 - 3 * 2
```
+ 5 - 3 * 2
+ 8 / 2 ** 2
pi <- 3.14159265359
pi*2
+ (5 - 3) * 2
+ (8 / 2) ** 2
pi <- 3.14159265359
pi <- 3.14159265359
